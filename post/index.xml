<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Doug&#39;s Blog</title>
    <link>https://douglascuthbertson.com/post/</link>
    <description>Recent content in Posts on Doug&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</managingEditor>
    <webMaster>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</webMaster>
    <copyright>(c) 2015-2020 Douglas Cuthbertson. This work is licensed under the [Creative Commons Attribution 4.0 (CC BY 4.0), International License](https://creativecommons.org/licenses/by/4.0/)</copyright>
    <lastBuildDate>Sat, 22 Feb 2020 17:38:32 -0500</lastBuildDate>
    
        <atom:link href="https://douglascuthbertson.com/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A New Hugo-Based Blog</title>
      <link>https://douglascuthbertson.com/2020/02/a-new-hugo-based-blog/</link>
      <pubDate>Sat, 22 Feb 2020 17:38:32 -0500</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2020/02/a-new-hugo-based-blog/</guid>
      <description>&lt;div class=&#34;document&#34;&gt;


&lt;p&gt;In my &lt;a class=&#34;reference external&#34; href=&#34;https://douglascuthbertson.com/2020/02/restart/&#34;&gt;previous post&lt;/a&gt; I talked a little about why and how I started this blog. Here I want to present my experience with &lt;a class=&#34;reference external&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; and what I like about it.&lt;/p&gt;
&lt;p&gt;Late in 2018  I came across &lt;a class=&#34;reference external&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;, a static site generator written in &lt;a class=&#34;reference external&#34; href=&#34;https://golang.org&#34;&gt;Go&lt;/a&gt;. Dissatisfied with Jekyll, I needed a different static site generator, and I had been learning Go at Work. This looked like a good opportunity to try blogging again.&lt;/p&gt;
&lt;p&gt;I stumbled quite badly a few times along the way. I thought a theme would help me get my site up and running quickly, but they don&#39;t balance well with my need to twiddle with the site&#39;s layout and look and feel. The long and short of it is, I took what I learned from trying out a couple of themes, and hunkered down to learn a few things about &amp;quot;The Hugo Way&amp;quot;, and the basics of HTML &amp;amp; CSS.&lt;/p&gt;
&lt;div class=&#34;section&#34; id=&#34;the-short-lived-academic-theme&#34;&gt;
&lt;h2&gt;The Short-lived Academic Theme&lt;/h2&gt;
&lt;p&gt;As I have a tendency to do with new tools, I dove in too deep, too fast. Hugo has themes, and they look like a good way to get something up and running quickly. I looked over &lt;a class=&#34;reference external&#34; href=&#34;https://themes.gohugo.io/&#34;&gt;the theme gallery&lt;/a&gt; checking all the features and how they looked. &lt;a class=&#34;reference external&#34; href=&#34;https://themes.gohugo.io/academic/&#34;&gt;Academic&lt;/a&gt; is very flexible and chock full of features. I decided to give it a whirl in February 2019. It looked like this out of the box.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/001-2019.02.03.01-initial-commit.png&#34;&gt;&lt;img alt=&#34;Academic Theme&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/001-2019.02.03.01-initial-commit.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;I tried a few small configuration changes to see how I liked it. My hope was only minor changes would be necessary so I could have a site that looked good to me and had a responsive layout. That way I could just write posts.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/002-2019.02.03.02-title.and.footer.png&#34;&gt;&lt;img alt=&#34;My First Time using the Academic Theme&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/002-2019.02.03.02-title.and.footer.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;quick-switch-to-vanilla-bootstrap&#34;&gt;
&lt;h2&gt;Quick Switch to Vanilla Bootstrap&lt;/h2&gt;
&lt;p&gt;Sadly, Academic was short lived. By the 9th of the month I gave up on it. For all the features it has, I found it too hard to configure and customize. Don&#39;t get me wrong. Academic is amazing and has &lt;a class=&#34;reference external&#34; href=&#34;https://sourcethemes.com/academic/docs/get-started/&#34;&gt;good documentation&lt;/a&gt;, but this theme &lt;a class=&#34;reference external&#34; href=&#34;https://sourcethemes.com/academic/themes/&#34;&gt;has its own themes&lt;/a&gt;. It&#39;s a little more complex than what I needed. Also, I didn&#39;t realize at the time, but Academic isn&#39;t just a Hugo theme. It is a website builder. It uses Hugo as an engine to bring life to a website rather than being a set of content-decorators run by Hugo.&lt;/p&gt;
&lt;p&gt;Too new to how Hugo workds and the complexities of a website builder, I looked for a simpler solution and settled on &lt;a class=&#34;reference external&#34; href=&#34;https://themes.gohugo.io/vanilla-bootstrap-hugo-theme/&#34;&gt;Vanilla Bootstrap&lt;/a&gt;.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/003-2019.02.09-vanilla-theme-simplification.png&#34;&gt;&lt;img alt=&#34;First Rendition using the Vanilla Bootstrap Theme&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/003-2019.02.09-vanilla-theme-simplification.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;The change was dramatic and configuration was simplified. While Academic has two levels of configuration, the core through &lt;tt class=&#34;docutils literal&#34;&gt;config/_default/config.toml&lt;/tt&gt; and another level controlled through the content in the &lt;tt class=&#34;docutils literal&#34;&gt;content/home&lt;/tt&gt; directory, Vanilla Bootstrap requires only core configuration of Hugo and a handful of theme-specific parameters all managed through the default configuration files.&lt;/p&gt;
&lt;div class=&#34;section&#34; id=&#34;a-new-navigation-menu&#34;&gt;
&lt;h3&gt;A New Navigation Menu&lt;/h3&gt;
&lt;p&gt;It looked pretty good for a few hours of work. It was easy to define a menu at the top of the home page providing links to other pages. Most of what I needed to define the menus was contained in &lt;tt class=&#34;docutils literal&#34;&gt;config/_default/config.toml&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
# See https://feathericons.com/
# The value of pre is the icon name
[menu]
  [[menu.nav]]
    name = &amp;quot;Home&amp;quot;
    pre = &amp;quot;home&amp;quot;
    url = &amp;quot;/&amp;quot;
    weight = 1
  [[menu.nav]]
    name = &amp;quot;Notes&amp;quot;
    pre = &amp;quot;edit&amp;quot;
    url = &amp;quot;/notes/&amp;quot;
    weight = 2
  [[menu.nav]]
    name = &amp;quot;About&amp;quot;
    pre = &amp;quot;smile&amp;quot;
    url = &amp;quot;/about/&amp;quot;
    weight = 3
  [[menu.nav]]
    name = &amp;quot;Now&amp;quot;
    pre = &amp;quot;play&amp;quot;
    url = &amp;quot;/now/&amp;quot;
    weight = 4
  [[menu.nav]]
    name = &amp;quot;RSS&amp;quot;
    pre = &amp;quot;rss&amp;quot;
    url = &amp;quot;/index.xml&amp;quot;
    weight = 5
&lt;/pre&gt;
&lt;p&gt;The theme provides the other major component in &lt;tt class=&#34;docutils literal&#34;&gt;theme/vanilla/layouts/partials/nav.html&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;literal-block&#34;&gt;
&amp;lt;div id=&amp;quot;nav-border&amp;quot; class=&amp;quot;container&amp;quot;&amp;gt;
  &amp;lt;nav id=&amp;quot;nav&amp;quot; class=&amp;quot;nav justify-content-center&amp;quot;&amp;gt;
  {{ $showActiveNav := .Site.Params.showActiveNav }}
  {{ $currentPage := . }}
  {{ range .Site.Menus.nav }}
    {{ $active := &amp;quot;&amp;quot; }}
    {{ if eq $showActiveNav true }}
      {{ $isMenu := or ($currentPage.IsMenuCurrent &amp;quot;nav&amp;quot; .) ($currentPage.HasMenuCurrent &amp;quot;nav&amp;quot; .) }}
      {{ if or $isMenu (eq $currentPage.Title .Name) }}
        {{ $active = &amp;quot;nav-link-active&amp;quot; }}
      {{ end }}
    {{ end }}
    {{ $icon := printf &amp;quot;&amp;lt;i data-feather=\&amp;quot;%s\&amp;quot;&amp;gt;&amp;lt;/i&amp;gt;&amp;quot; .Pre }}
    {{ $text := print $icon &amp;quot; &amp;quot; .Name | safeHTML }}
    &amp;lt;a class=&amp;quot;nav-link {{ $active }}&amp;quot; href=&amp;quot;{{ .URL }}&amp;quot;&amp;gt;{{ $text }}&amp;lt;/a&amp;gt;
  {{ end }}
  &amp;lt;/nav&amp;gt;
&amp;lt;/div&amp;gt;
&lt;/pre&gt;
&lt;p&gt;It cycles through the &lt;tt class=&#34;docutils literal&#34;&gt;menu.nav&lt;/tt&gt; items in &lt;tt class=&#34;docutils literal&#34;&gt;config.toml&lt;/tt&gt; and translates those values to a feather icon, text, and a link to the given URL. The site was beginning to fill out, although today the icons look silly to me.&lt;/p&gt;
&lt;p&gt;There&#39;s a &amp;quot;Notes&amp;quot; menu item, because I thought I would use the site to keep notes as well as regular blog posts. I&#39;ve since separated my personal notes and works-in-progress from blog posts. I&#39;m willing to go only so far in what I make public. It&#39;s best to keep some thoughts as background material, and let others stew for a while before publicizing them.&lt;/p&gt;
&lt;p&gt;I created a simple 404 page, and a big &amp;quot;jumbotron&amp;quot; area for all the index pages. The site was beginning to fill out. Although, today the icons look silly to me.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/004-2019.02.10-jumbotron.png&#34;&gt;&lt;img alt=&#34;Jumbotron&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/004-2019.02.10-jumbotron.png&#34; style=&#34;width: 650px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;The note is dated April 8, 2019 because that was my goal for publishing the site. It took a little longer than I expected. Mostly, I was unsure about putting up my notes in public, the design was poor, and I thought I should do better.&lt;/p&gt;
&lt;p&gt;In hindsight, content is more important than style. It would have been better to write posts and develop the site simultaneously.&lt;/p&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;more-puttering-around-with-layout&#34;&gt;
&lt;h3&gt;More Puttering Around with Layout&lt;/h3&gt;
&lt;p&gt;It was still early February, and I was learning how Hugo worked, it&#39;s configuration system, and how and where to integrate CSS, SCSS, and JavaScript (particularly MathJax). I spent time breaking up the layout into partials for more consistency across the site.&lt;/p&gt;
&lt;p&gt;I added a picture of Motif No. 1 I took in Rockport, Massachusetts to fill the jumbotron. It got cropped rather poorly, though.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/005-2019.02.11-wide.png&#34;&gt;&lt;img alt=&#34;Wide Menu Day&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/005-2019.02.11-wide.png&#34; style=&#34;width: 650px;&#34; /&gt;&lt;/a&gt;
&lt;div class=&#34;section&#34; id=&#34;mathjax&#34;&gt;
&lt;h4&gt;MathJax&lt;/h4&gt;
&lt;p&gt;I was happy to learn a little about configuring MathJax. It makes it possible to display equations on web pages. To configure MathJax to automatically number equations - just include the following in &lt;tt class=&#34;docutils literal&#34;&gt;layouts/partials/script.html&lt;/tt&gt; (which is included in &lt;tt class=&#34;docutils literal&#34;&gt;layouts/_default/baseof.html&lt;/tt&gt;):&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Configure MathJax for automatic equation numbering. See
  http://docs.mathjax.org/en/latest/tex.html#automatic-equation-numbering
  for details
--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;name attribute&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name other&#34;&gt;MathJax&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Hub&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;({&lt;/span&gt;
    &lt;span class=&#34;name other&#34;&gt;TeX&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;equationNumbers&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;autoNumber&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal string double&#34;&gt;&amp;quot;AMS&amp;quot;&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;punctuation&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I realize that MathJax is a large JavaScript library. It&#39;s probably stupid to try optimizations without testing, nevertheless I didn&#39;t want to load MathJax with every page. Most pages don&#39;t require it, so I wrap the MathJax configuration in an if-block that detects if the page (or the whole site) defines the parameter &lt;tt class=&#34;docutils literal&#34;&gt;math&lt;/tt&gt;.  The configuration has been updated, as well.&lt;/p&gt;
&lt;p&gt;Now all I have to do is add &lt;tt class=&#34;docutils literal&#34;&gt;math: true&lt;/tt&gt; to the front matter of any file that includes \(\LaTeX\).&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Include MathJaX if either the page or the site params define math=true --&amp;gt;&lt;/span&gt;
{{- if or .Params.math .Site.Params.math -}}
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Configure MathJax for automatic equation numbering. See
  https://docs.mathjax.org/en/latest/tex.html#automatic-equation-numbering
  for details.
  Also, for tex2jax configuration see https://docs.mathjax.org/en/latest/
  options/preprocessors/tex2jax.html

  Note that the double-backslashes are very important. Without them ordinary
  markdown will interpret (parenthetical statements) as inline math, and cause
  similar problems if text is put between &#39;[&#39; and &#39;]&#39;.
--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;name attribute&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;text/x-mathjax-config&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name other&#34;&gt;MathJax&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Hub&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Config&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;({&lt;/span&gt;
    &lt;span class=&#34;name other&#34;&gt;TeX&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;equationNumbers&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;autoNumber&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal string double&#34;&gt;&amp;quot;AMS&amp;quot;&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;},&lt;/span&gt;
            &lt;span class=&#34;name other&#34;&gt;extensions&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;literal string double&#34;&gt;&amp;quot;AMSmath.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string double&#34;&gt;&amp;quot;AMSsymbols.js&amp;quot;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;},&lt;/span&gt;
    &lt;span class=&#34;name other&#34;&gt;tex2jax&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
      &lt;span class=&#34;name other&#34;&gt;inlineMath&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;$&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;$&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;\\(&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;\\)&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]],&lt;/span&gt;
      &lt;span class=&#34;name other&#34;&gt;displayMath&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[[&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;$$&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;$$&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;\\[&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;\\]&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]],&lt;/span&gt;
      &lt;span class=&#34;name other&#34;&gt;processEscapes&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;keyword constant&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;name other&#34;&gt;processEnvironments&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;keyword constant&#34;&gt;true&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt;
      &lt;span class=&#34;name other&#34;&gt;skipTags&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;script&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string single&#34;&gt;&#39;noscript&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string single&#34;&gt;&#39;style&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string single&#34;&gt;&#39;textarea&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string single&#34;&gt;&#39;pre&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;literal string single&#34;&gt;&#39;code&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;]&lt;/span&gt;
    &lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
  &lt;span class=&#34;punctuation&#34;&gt;});&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;In addition to being updated, it tries to load from a Cloudflare, but if it can&#39;t connect it loads a local copy.&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!--
  Load MathJax. Note that this is one of the most general configurations.
  See the configuration docs for others. There might be a lighter version
  that will work for my purposes.
  https://docs.mathjax.org/en/latest/config-files.html#common-configurations
--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- MathJax: Fall back to local if your computer is offline and can&#39;t connect
  to the CDN. For convenience, the configuration for the fallback deactivates
  image fonts support (imageFont:null). This allows you to host a slim local
  copy by deleting the PNG fonts.--&amp;gt;&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&#34;name attribute&#34;&gt;async&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;type=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;text/javascript&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;src=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&#39;https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-MML-AM_CHTML&#39;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&#34;name tag&#34;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;span class=&#34;name builtin&#34;&gt;window&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;MathJax&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;||&lt;/span&gt; &lt;span class=&#34;name builtin&#34;&gt;document&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;write&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;literal string single&#34;&gt;&#39;&amp;lt;script type=&amp;quot;text/x-mathjax-config&amp;quot;&amp;gt;MathJax.Hub.Config({&amp;quot;HTML-CSS&amp;quot;:{imageFont:null}});&amp;lt;\/script&amp;gt;&amp;lt;script type=&amp;quot;text/javascript&amp;quot; src=&amp;quot;{{ &amp;quot;scripts/MathJax-2.7.5/MathJax.js&amp;quot; | relURL }}?config=TeX-AMS-MML_HTMLorMML&amp;quot;&amp;gt;&amp;lt;\/script&amp;gt;&#39;&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;)&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
{{- end -}}
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;pagination&#34;&gt;
&lt;h4&gt;Pagination&lt;/h4&gt;
&lt;p&gt;I had added lots of notes and the layout was still sprinkled with distracting icons, this time with a redish theme and green accents. I had at least learned how to paginate my page lists. For example, the default list (&lt;tt class=&#34;docutils literal&#34;&gt;layouts/_default/list.html&lt;/tt&gt;) used Hugo&#39;s built-in pagination:&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
{{ define &amp;quot;main&amp;quot; }}

&lt;span class=&#34;name tag&#34;&gt;&amp;lt;main&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- default list template --&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;article&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- &amp;quot;{{.Content}}&amp;quot; pulls from the markdown content of the corresponding _index.md --&amp;gt;&lt;/span&gt;
      {{ .Content }}
    &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- Paginates through content/note/*.md --&amp;gt;&lt;/span&gt;
    {{ $paginator := .Paginate (where .Pages &amp;quot;Type&amp;quot; &amp;quot;note&amp;quot;) }}
    {{ range $paginator.Pages }}
      &lt;span class=&#34;name tag&#34;&gt;&amp;lt;h2&amp;gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;font-125&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;{{ .Permalink }}&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;{{ .Title }}&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;name tag&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;article-meta-data&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
        {{ partial &amp;quot;date-and-tags.html&amp;quot; . }}
        &lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- this renders based on layouts/_default/summary.html (either the
        local one, or the one in a theme --&amp;gt;&lt;/span&gt;
        {{ .Render &amp;quot;summary&amp;quot; }}
      &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    {{ end }}
    {{ template &amp;quot;_internal/pagination.html&amp;quot; . }}
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/article&amp;gt;&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/main&amp;gt;&lt;/span&gt;

{{ end }}
&lt;/pre&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/006-2019.04.08-red-green.png&#34;&gt;&lt;img alt=&#34;Pagination, redish theme, and green accents&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/006-2019.04.08-red-green.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;scrollbar-jumping&#34;&gt;
&lt;h4&gt;Scrollbar Jumping&lt;/h4&gt;
&lt;p&gt;At some point I noticed that when navigating from a page that had no scrollbar (like a short post or note) to one that did (such as the paginated lists of notes displayed above) the whole layout shifted slightly. I found a &lt;a class=&#34;reference external&#34; href=&#34;MoreElegantFixforJumpingScrollbarIssue&#34;&gt;fix for it at CSS-Tricks&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;At the time, I had a &lt;tt class=&#34;docutils literal&#34;&gt;layouts/partials/style.html&lt;/tt&gt; partial file. All I had to do was add a few lines of CSS to it:&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;name tag&#34;&gt;html&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;margin-left&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;name&#34;&gt;calc&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;literal number&#34;&gt;100&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;vw&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;100%&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;margin-right&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;scss-pipeline-processing&#34;&gt;
&lt;h4&gt;SCSS Pipeline Processing&lt;/h4&gt;
&lt;p&gt;By April I had setup a pipeline for processing SCSS into CSS. The pipeline consisted of this small amount of template code:&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;comment&#34;&gt;&amp;lt;!-- For more info about using SCSS and this pipeline see:
  https://github.com/gohugoio/hugo/commit/dea71670c059ab4d5a42bd22503f18c087dd22d4,
  https://gohugo.io/hugo-pipes/scss-sass/, https://gohugo.io/hugo-pipes/postcss/,
  and https://gohugo.io/hugo-pipes/
--&amp;gt;&lt;/span&gt;
{{ $style := resources.Get &amp;quot;sass/main.scss&amp;quot; | toCSS | minify | fingerprint }}
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;rel=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;stylesheet&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;{{ $style.RelPermalink }}&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;integrity=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;{{ $style.Data.Digest }}&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;media=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;screen&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The &lt;tt class=&#34;docutils literal&#34;&gt;main.scss&lt;/tt&gt; file lived in &lt;tt class=&#34;docutils literal&#34;&gt;assets/scss/&lt;/tt&gt; at the root of the repository.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;sorry-vanilla-you-have-to-go&#34;&gt;
&lt;h2&gt;Sorry Vanilla. You have to Go&lt;/h2&gt;
&lt;p&gt;One aspect of design I didn&#39;t enjoy was trying to figure out the correct CSS classes to apply to a given situation. For example, the body element is &lt;tt class=&#34;docutils literal&#34;&gt;&amp;lt;body &lt;span class=&#34;pre&#34;&gt;class=&amp;quot;d-flex&lt;/span&gt; &lt;span class=&#34;pre&#34;&gt;flex-column&lt;/span&gt; &lt;span class=&#34;pre&#34;&gt;h-100&amp;quot;&amp;gt;&lt;/span&gt;&lt;/tt&gt;. I have no idea what those classes mean and why I need them, so I started learning more about HTML and CSS.&lt;/p&gt;
&lt;p&gt;My new goal was to really understand the structure of my site, so I know where things are, what needs to be modified as I build it to look the way I want it to, and know the elements and classes defined in the layout so they can be styled correctly. Vanilla Bootstrap was a nice place to start, but I don&#39;t understand the choices made for structure and styling. Its use of Bootstrap added another layer of complexity to learning how changes to CSS will affect the site.&lt;/p&gt;
&lt;p&gt;In the middle of April, I ripped out Vanilla Bootstrap and started over.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/007-2019.04.13-back-to-basics.png&#34;&gt;&lt;img alt=&#34;Back to Basics&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/007-2019.04.13-back-to-basics.png&#34; style=&#34;width: 300.0px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;Weird. I started off the year with a sophisticated theme, because I thought it would help me get to a nice looking website fast. I found the large array of options in Academic to be overwhelming.&lt;/p&gt;
&lt;p&gt;Switching to the theme to Vanilla enabled me to learn more about layout and styling, but what I wound up with was cutesy and still too difficult to reason about when it came to knowing which levers to pull and dials to turn to affect the layout and styling in a predictable way.&lt;/p&gt;
&lt;p&gt;Ripping out Vanilla left me with a barebones layout. Here are some of the things I learned along the way to creating a site more to my liking.&lt;/p&gt;
&lt;div class=&#34;section&#34; id=&#34;navigation-menu&#34;&gt;
&lt;h3&gt;Navigation Menu&lt;/h3&gt;
&lt;p&gt;By late April, I learned that navigation links didn&#39;t have to be wrapped in an unordered list. Looking through git log, I found the navigation menu had always been wrapped in an unordered list.&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;ul&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;navbar-nav mr-auto&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;nav-item&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;nav-link&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;/#about&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;data-target=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;#about&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;name tag&#34;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Home&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;li&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;nav-item&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;nav-link&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;/#publications_featured&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;data-target=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;#publications_featured&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&#34;name tag&#34;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;Publications&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/li&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Now I have just a &lt;tt class=&#34;docutils literal&#34;&gt;&amp;lt;nav&amp;gt;&lt;/tt&gt; element that wraps a &lt;tt class=&#34;docutils literal&#34;&gt;&amp;lt;div&amp;gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;code html literal-block&#34;&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;nav&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav__items&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav__link navLink-active&amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;http://localhost:1414/&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;Home&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav__link &amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;http://localhost:1414/about/&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;About&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav__link &amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;http://localhost:1414/now/&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;Now&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;name tag&#34;&gt;&amp;lt;a&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;class=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;main-nav__link &amp;quot;&lt;/span&gt; &lt;span class=&#34;name attribute&#34;&gt;href=&lt;/span&gt;&lt;span class=&#34;literal string&#34;&gt;&amp;quot;http://localhost:1414/index.xml&amp;quot;&lt;/span&gt;&lt;span class=&#34;name tag&#34;&gt;&amp;gt;&lt;/span&gt;RSS&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/a&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;name tag&#34;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&#34;name tag&#34;&gt;&amp;lt;/nav&amp;gt;&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The CSS for this section consists of class definitions for &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;main-nav&lt;/span&gt;&lt;/tt&gt; and &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;main-nav__items&lt;/span&gt;&lt;/tt&gt;. It is very simple, and doesn&#39;t even try to style the &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;main-nav__link&lt;/span&gt;&lt;/tt&gt; class.&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;name class&#34;&gt;.main-nav&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;display&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;name&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;justify&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;keyword&#34;&gt;content&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;name&#34;&gt;flex&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;start&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;

&lt;span class=&#34;name class&#34;&gt;.main-nav__items&lt;/span&gt; &lt;span class=&#34;name tag&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;font-size&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;1.1em&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;margin-right&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;ch&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;Unwrapping them changed navigation from:&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/008-2019.04.18-unstyled-navigation-list.png&#34;&gt;&lt;img alt=&#34;Unstyled navigation list&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/008-2019.04.18-unstyled-navigation-list.png&#34; style=&#34;width: 300.0px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;to this:&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/008-2019.04.19-plain-navigation.png&#34;&gt;&lt;img alt=&#34;Plain navigation&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/009-2019.04.19-plain-navigation.png&#34; style=&#34;width: 480.0px;&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;general-layout&#34;&gt;
&lt;h3&gt;General Layout&lt;/h3&gt;
&lt;p&gt;Per the &lt;a class=&#34;reference external&#34; href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/box-sizing&#34;&gt;MDN docs on box-sizing&lt;/a&gt; &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;border-box&lt;/span&gt;&lt;/tt&gt; makes dealing with the sizes of elements much easier, and generally eliminates a number of pitfalls you can stumble on while laying out your content, so I set &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;border-box&lt;/span&gt;&lt;/tt&gt; globally.&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;name&#34;&gt;box&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;sizing&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;box&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I learned I can set site-wide parameters in Hugo&#39;s configuration files. I set the site width and several other parameters in &lt;tt class=&#34;docutils literal&#34;&gt;config/_default/params.toml&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;code text literal-block&#34;&gt;
showActiveNav = true
author = &amp;quot;Douglas Cuthbertson&amp;quot;
description = &amp;quot;This is my soapbox for thoughts on programming, project planning, sketching, drawing, kempo, and any other topic that may suit my fancy.&amp;quot;
dateFormat = &amp;quot;Monday Jan 2, 2006&amp;quot;
dateFormatExtended = &amp;quot;Monday Jan 2, 2006 15:04&amp;quot;
homeText = &amp;quot;&amp;quot;
copyright = &amp;quot;(c) 2015-2020 Douglas Cuthbertson. This work is licensed under the [Creative Commons Attribution 4.0 (CC BY 4.0), International License](https://creativecommons.org/licenses/by/4.0/)&amp;quot;
footerText = &amp;quot;Made with HTML, CSS, JavaScript, and perseverance. Generated by [Hugo](https://gohugo.io/)&amp;quot;
hideFooter = false
#featured_image = &amp;quot;/images/hero-header-default.jpg&amp;quot;
#featured_image = &amp;quot;/images/hero-header-april.jpg&amp;quot;
site_width = &amp;quot;104ch&amp;quot;

componentDropCaps = &amp;quot;drop-caps_goudy&amp;quot;
mainSections = [&amp;quot;note&amp;quot;, &amp;quot;post&amp;quot;, &amp;quot;project&amp;quot;]
planck = &amp;quot;\u210E&amp;quot;
reduced_planck = &amp;quot;\u210F&amp;quot;
&lt;/pre&gt;
&lt;p&gt;and use &lt;tt class=&#34;docutils literal&#34;&gt;site_width&lt;/tt&gt; in &lt;tt class=&#34;docutils literal&#34;&gt;assets/style/base.css&lt;/tt&gt; as follows:&lt;/p&gt;
&lt;pre class=&#34;code text literal-block&#34;&gt;
{{ $siteWidth := .Site.Params.site_width }}
{{ if not .Site.Params.site_width }}
{{ $siteWidth = &amp;quot;936px&amp;quot; }}
{{ end }}
&lt;/pre&gt;
&lt;p&gt;I&#39;ve only recently decided that this is a bad idea. Every time I try to experiment with the site width, I have to touch the configuration. Hugo must go through a complete rebuild of the site, which takes much more time than necessary.&lt;/p&gt;
&lt;p&gt;The only reason to put a parameter in a configuration file is if the value must be accessed from more than one place. In this case, it was needed only in a single CSS file. Once I defined the width directly in &lt;tt class=&#34;docutils literal&#34;&gt;base.css&lt;/tt&gt;, site rebuilds were faster, and my CSS is no longer cluttered with Go template code. Also, &lt;tt class=&#34;docutils literal&#34;&gt;layouts/partials/head.html&lt;/tt&gt; was slightly simplified. Instead of accessing &lt;tt class=&#34;docutils literal&#34;&gt;base.css&lt;/tt&gt; as&lt;/p&gt;
&lt;pre class=&#34;code go literal-block&#34;&gt;
&lt;span class=&#34;punctuation&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;error&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;cssBase&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Get&lt;/span&gt; &lt;span class=&#34;literal string&#34;&gt;&amp;quot;style/base.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;|&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;ExecuteAsTemplate&lt;/span&gt; &lt;span class=&#34;literal string&#34;&gt;&amp;quot;style.base.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;}}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;the code is now&lt;/p&gt;
&lt;blockquote&gt;
&lt;pre class=&#34;code go literal-block&#34;&gt;
&lt;span class=&#34;punctuation&#34;&gt;{{&lt;/span&gt; &lt;span class=&#34;error&#34;&gt;$&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;cssBase&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;:=&lt;/span&gt; &lt;span class=&#34;name other&#34;&gt;resources&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;name other&#34;&gt;Get&lt;/span&gt; &lt;span class=&#34;literal string&#34;&gt;&amp;quot;style/base.css&amp;quot;&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;}}&lt;/span&gt;
&lt;/pre&gt;
&lt;/blockquote&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;color-consistency-and-contrast&#34;&gt;
&lt;h3&gt;Color Consistency and Contrast&lt;/h3&gt;
&lt;p&gt;In May I was trying to ensure colors were being used consistently. I learned that the site should have primary and accent colors, and define the color of the body text. Some designers say that black text on a white background is too harsh and set dark gray text on a light gray background. When I look at those sites, I find the contrast is often too low and causes eye strain. I originally just went with black text on white. I figured it&#39;s a work in progress, and that can be adjusted when the rest of the site is more to my liking.&lt;/p&gt;
&lt;p&gt;In deference to experienced designers I now set the text to a very dark gray on a very light gray background. I created a palette using &lt;a class=&#34;reference external&#34; href=&#34;https://developer.mozilla.org/en-US/docs/Web/CSS/Using_CSS_custom_properties&#34;&gt;CSS custom properties&lt;/a&gt;:&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;name decorator&#34;&gt;:root&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color100&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#f5fffa&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color200&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#7cffbb&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color300&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#00eb75&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color400&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#00c663&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color500&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#00a151&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color600&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#007c3e&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color700&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#00572c&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color800&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#003219&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color900&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#000b05&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray100&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#fcfcfc&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray200&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#dedede&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray300&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#bfbfbf&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray400&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#a1a1a1&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray500&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#828282&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray600&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#636363&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray700&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#454545&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray800&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#262626&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray900&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#080808&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* text */&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color500&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;complement&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#a30052&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* anchor hover */&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color500&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#0062a3&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* drop-caps */&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color500&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;complement&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#a34100&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt; &lt;span class=&#34;comment&#34;&gt;/* reserved */&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color700&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;complement&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#00572b&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color700&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#003457&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;color700&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;adjacent&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;complement&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#572300&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;I like this aspect of CSS. It means I can define all the colors I care about in one place, and I don&#39;t have to learn SCSS at the moment to do it.&lt;/p&gt;
&lt;p&gt;Some sites eschew black text on a white background. For example, &lt;a class=&#34;reference external&#34; href=&#34;https://jgthms.com/web-design-in-4-minutes/&#34;&gt;Web Design in 4 Minutes&lt;/a&gt; recommends using a medium gray (#555) for body text, a dark gray (#333) for headings and strong text all against a white background. However that creates a rather low contrast. To make matters worse, the background for code blocks is set to #eee.&lt;/p&gt;
&lt;p&gt;The &lt;a class=&#34;reference external&#34; href=&#34;https://www.w3.org/TR/WCAG20/&#34;&gt;Web Content Accessibility Guidelines&lt;/a&gt; recommends a contrast ratio of at least 7:1 for normal text and 4.5:1 for large text. Large text is defined as 14 point (typically 18.66px) and bold or larger, or 18 point (typically 24px) or larger. The contrast ratio for headings set to #333 against white is strong at 12.62:1. Body text set to #555 against white is barely acceptable at 7.46:1. Finally, the constrast ratio of code blocks (#555 against a background of #eee) is unacceptable at 6.42:1.&lt;/p&gt;
&lt;p&gt;Originally, I had black text on a white background. In deference to designers who have a lot more experience creating web sites than I do, I set the background and text colors to the lightest and darkest grays in the palette, respectively.&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;name tag&#34;&gt;body&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;name&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray100&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;);&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;color&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;name&#34;&gt;var&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;--&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;gray900&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;);&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;The contrast ratio is 19.52:1. Is that too high? One day I&#39;ll look into separate degrees of contrast for body text and headings.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;styling-fun&#34;&gt;
&lt;h2&gt;Styling Fun&lt;/h2&gt;
&lt;p&gt;One thing I particularly liked was how nice drop caps looked on &lt;a class=&#34;reference external&#34; href=&#34;https://www.gwern.net/index&#34;&gt;Gwern&lt;/a&gt;. I looked at his CSS and created a new file, &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;static\style\drop-caps\drop-caps.css&lt;/span&gt;&lt;/tt&gt; with a simplified version of his CSS. I dropped it in the &lt;tt class=&#34;docutils literal&#34;&gt;static/&lt;/tt&gt; directory instead of the &lt;tt class=&#34;docutils literal&#34;&gt;assets/&lt;/tt&gt; folder out of expediency, and I modified &lt;tt class=&#34;docutils literal&#34;&gt;layouts/_default/baseof.html&lt;/tt&gt; to pull in the drop caps definitions.&lt;/p&gt;
&lt;div class=&#34;admonition note&#34;&gt;
&lt;p class=&#34;first admonition-title&#34;&gt;Note&lt;/p&gt;
&lt;p&gt;Browser-specific Styling&lt;/p&gt;
&lt;p class=&#34;last&#34;&gt;For the longest time I couldn&#39;t get drop-caps to look good in both Firefox and Chrome at the same time. After looking more closely at &lt;a class=&#34;reference external&#34; href=&#34;https://www.gwern.net/index&#34;&gt;gwern.net&lt;/a&gt; I realized &lt;tt class=&#34;docutils literal&#34;&gt;&amp;#64;supports &lt;span class=&#34;pre&#34;&gt;(-moz-user-focus:&lt;/span&gt; normal) { ... }&lt;/tt&gt; is used as a flag to make styling adjustments specific to Firefox. Drop-caps works just fine in Firefox here, so I use &lt;tt class=&#34;docutils literal&#34;&gt;&amp;#64;supports not &lt;span class=&#34;pre&#34;&gt;(-moz-user-focus:&lt;/span&gt; normal)&lt;/tt&gt; to wrap adjustments for all other browsers. It finally looks pretty good in both browsers.&lt;/p&gt;
&lt;/div&gt;
&lt;p&gt;By the end of June I removed most of the feather icons and simplified the layout. It looked better.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/010-2019.06.27-simple.png&#34;&gt;&lt;img alt=&#34;June 2019. A more simple presentation.&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/010-2019.06.27-simple.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;/div&gt;
&lt;div class=&#34;section&#34; id=&#34;debugging-layouts&#34;&gt;
&lt;h2&gt;Debugging Layouts&lt;/h2&gt;
&lt;p&gt;A simple trick to help debug layouts is to put a high-contrast border and background color around the sections you&#39;re working on.&lt;/p&gt;
&lt;pre class=&#34;code css literal-block&#34;&gt;
&lt;span class=&#34;name class&#34;&gt;.wrapper&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;operator&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;punctuation&#34;&gt;{&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;2px&lt;/span&gt; &lt;span class=&#34;keyword&#34;&gt;solid&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#f08c00&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;background-color&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;#ffec99&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;border&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;-&lt;/span&gt;&lt;span class=&#34;name&#34;&gt;radius&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;5px&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
  &lt;span class=&#34;keyword&#34;&gt;padding&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;:&lt;/span&gt; &lt;span class=&#34;literal number&#34;&gt;10px&lt;/span&gt;&lt;span class=&#34;punctuation&#34;&gt;;&lt;/span&gt;
&lt;span class=&#34;punctuation&#34;&gt;}&lt;/span&gt;
&lt;/pre&gt;
&lt;p&gt;A little thing like that helped me make a two column layout.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/011-2019.08.04-two-column.png&#34;&gt;&lt;img alt=&#34;Two Column Layout&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/011-2019.08.04-two-column.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;By the end of September last year, I had restructured a lot of the blog. It has a stronger two-column layout and a splash of color.&lt;/p&gt;
&lt;a class=&#34;reference external image-reference&#34; href=&#34;https://douglascuthbertson.com/images/history/012-2019.09.30-no-notes-breadcrumbs.png&#34;&gt;&lt;img alt=&#34;A Splash of Color&#34; class=&#34;post-image align-left&#34; src=&#34;https://douglascuthbertson.com/images/history/012-2019.09.30-no-notes-breadcrumbs.png&#34; style=&#34;width: 600px;&#34; /&gt;&lt;/a&gt;
&lt;p&gt;Since then, I&#39;ve been periodically iterating on the design. It is pretty much complete and I&#39;m generally happy with the way it has turned out. I&#39;ll continue to fiddle with it here and there, but I plan to write about things with which I&#39;m more familiar.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>Restart</title>
      <link>https://douglascuthbertson.com/2020/02/restart/</link>
      <pubDate>Tue, 11 Feb 2020 05:48:36 -0500</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2020/02/restart/</guid>
      <description>&lt;div class=&#34;document&#34;&gt;


&lt;p&gt;Creating a blog is hard. I admire those who are able to design their own and write regular posts, so much so that I&#39;m trying again to create my own blog. I started this blog late in 2015. After writing a few posts, I became discouraged. I didn&#39;t like the way it looked, the tools often broke, and I didn&#39;t have a clear idea of what I wanted to write, or why I was blogging.&lt;/p&gt;
&lt;p&gt;Recently I was inspired by a post by Mattias Ott from May 12, 2019, &lt;a class=&#34;reference external&#34; href=&#34;https://matthiasott.com/articles/into-the-personal-website-verse&#34;&gt;Into the Personal-Website-Verse&lt;/a&gt;. He encouraged people to create their own personal website to write, create, share what you like, and to tinker with new technologies.&lt;/p&gt;
&lt;p&gt;Your own blog is supposed to be a place where you can make mistakes and learn without pressure. With that in mind, I&#39;m declaring this blog as my soapbox. My space to say what ever I want. My laboratory for experiments in web technologies. My window into my own experience from which I can reflect upon my past, figure out what&#39;s of interest now and navigate to a better future. If I&#39;m lucky, I might engage someone who wishes to share their own thoughts and experiences, and I&#39;ll learn something new.&lt;/p&gt;
&lt;div class=&#34;section&#34; id=&#34;rebuilding-from-jekyll-to-hugo&#34;&gt;
&lt;h2&gt;Rebuilding from Jekyll to Hugo&lt;/h2&gt;
&lt;p&gt;My first priority was to find good tools for creating a static site. The original experiment was, in part, to use &lt;a class=&#34;reference external&#34; href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; to build the site from Markdown files and publish it from &lt;a class=&#34;reference external&#34; href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt;. I was familiar with git, had been using &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; for years, and &lt;a class=&#34;reference external&#34; href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; and &lt;a class=&#34;reference external&#34; href=&#34;https://pages.github.com/&#34;&gt;GitHub Pages&lt;/a&gt; were advertised as a hand-in-glove fit for each other, and they are.&lt;/p&gt;
&lt;p&gt;I installed and configured Ruby (Jekyll is written in Ruby, but is not a standalone executable), Bundler to keep Ruby gems up-to-date, Compass to generate CSS from SASS/SCSS, and Jekyll of course, and settled in to learn how to create a blog. After reading a lot of docs, and experimenting a lot with HTML and SCSS, I had a working blog. It was kind of ugly, but it was functional. It had two columns, the left for posts and the right for links to posts by year. As I recall, it took quite a bit of effort to put together the markup, styling, and learn how to use the Liquid Template engine to pull together things like lists of posts by year, month, and day.&lt;/p&gt;
&lt;p&gt;At first, the writing and learning experience was delightful. I have a note from March 7, 2016 that says, &amp;quot;Jekyll is really easy to install and use. What takes time is learning enough about its bells and whistles, markdown, HTML, CSS, and Sass to make a blog or website you&#39;re own.&amp;quot;&lt;/p&gt;
&lt;p&gt;I had a couple of &lt;tt class=&#34;docutils literal&#34;&gt;.bat&lt;/tt&gt; files to update and launch Jekyll and Compass. The first was &lt;tt class=&#34;docutils literal&#34;&gt;_build\start.bat&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;code shell literal-block&#34;&gt;
&amp;#64;echo off
REM Update all the gems and &lt;span class=&#34;keyword&#34;&gt;then&lt;/span&gt; start Compass and Jekyll
call bundle update
SET &lt;span class=&#34;name variable&#34;&gt;PROJECT_PATH&lt;/span&gt;&lt;span class=&#34;operator&#34;&gt;=&lt;/span&gt;%~dp0
call %PROJECT_PATH%quick-start.bat
&lt;/pre&gt;
&lt;p&gt;The second was &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;quick-start.bat&lt;/span&gt;&lt;/tt&gt;:&lt;/p&gt;
&lt;pre class=&#34;code shell literal-block&#34;&gt;
&amp;#64;echo off
REM Start Compass and Jekyll without updating gems
start bundle &lt;span class=&#34;name builtin&#34;&gt;exec &lt;/span&gt;compass watch

REM Give compass a few seconds to start before launching jekyll.
&amp;#64;ping 192.0.2.2 -n &lt;span class=&#34;literal number&#34;&gt;1&lt;/span&gt; -w &lt;span class=&#34;literal number&#34;&gt;4000&lt;/span&gt; &amp;gt; nul

start bundle &lt;span class=&#34;name builtin&#34;&gt;exec &lt;/span&gt;jekyll s --port 4000
&lt;/pre&gt;
&lt;p&gt;All I had to do was run &lt;tt class=&#34;docutils literal&#34;&gt;_build\start.bat&lt;/tt&gt; and open a browser to &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;http://localhost:4000&lt;/span&gt;&lt;/tt&gt;. Each time I edited and saved a file, the view in the browser would update after a second or so. Blogging life was good.&lt;/p&gt;
&lt;p&gt;Later came a series of annoyances. It started with Compass crashing a lot when editing scss files. Compass was valuable for its math library. I found the exponentiation and logarithm functions most valuable. I used them for calculating the luminance of a color and the contrast ratio between two colors.&lt;/p&gt;
&lt;p&gt;The crashes got so annoying that I stopped using Compass in September of 2016. Compass wasn&#39;t being maintained anymore, and I wasn&#39;t about to start learning Ruby just to be able to write a blog. Fortunately, I learned that Jekyll had a built-in sass compiler. I also figured out how to write the color luminance and contrast ratio functions in pure sass, so I didn&#39;t need Compass&#39; math library either. I don&#39;t use scss currently. I guess (hope) luminance and contrast ratios are built-in functions by now, but in case they aren&#39;t, &lt;a class=&#34;reference external&#34; href=&#34;https://gist.github.com/dbc60/451f16c588b806967b706b45829e49dc&#34;&gt;here&#39;s a gist&lt;/a&gt; with those functions and a few others. Feel free to use it as you will.&lt;/p&gt;
&lt;p&gt;In October of 2016, the &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;--watch&lt;/span&gt;&lt;/tt&gt; option being disabled for Windows in version 3.3.0 of Jekyll. That option was originally intended for BASH on Windows, but was extended to the default &lt;tt class=&#34;docutils literal&#34;&gt;cmd.exe&lt;/tt&gt; and PowerShell. I found a fix among the &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/jekyll/jekyll/issues/5462#issuecomment-253982908&#34;&gt;comments&lt;/a&gt; in &lt;a class=&#34;reference external&#34; href=&#34;https://github.com/jekyll/jekyll/issues/5462&#34;&gt;Jekyll issue 5462&lt;/a&gt;. The comments said the underlying problem in BASH on Windows has been fixed, so &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;--watch&lt;/span&gt;&lt;/tt&gt; will be enabled in a later release. A temporary fix was to open &lt;tt class=&#34;docutils literal&#34;&gt;&lt;span class=&#34;pre&#34;&gt;vendor\bundle\gems\jekyll-3.3.0\lib\jekyll\commands\build.rb&lt;/span&gt;&lt;/tt&gt; and replace the line &lt;tt class=&#34;docutils literal&#34;&gt;if &lt;span class=&#34;pre&#34;&gt;Utils::Platforms.windows?&lt;/span&gt;&lt;/tt&gt; with &lt;tt class=&#34;docutils literal&#34;&gt;unless &lt;span class=&#34;pre&#34;&gt;Utils::Platforms.windows?&lt;/span&gt;&lt;/tt&gt;.&lt;/p&gt;
&lt;p&gt;I wasn&#39;t comfortable at all with manually modifying gem files. I didn&#39;t know Ruby, and those files were managed by Bundler. It just seemed like a bad idea. Still, I was still able to use live-reload and see the effects of edits on HTML and SCSS a few seconds after they happened. Fast feedback loops are truly invaluable when learning anything new.&lt;/p&gt;
&lt;p&gt;My last post was in November of 2016 after the US presidential election. I don&#39;t remember exactly why I stopped, but part of the reason was that Jekyll was slow, and it felt like the Windows implementation was treated as a second-class citizen.&lt;/p&gt;
&lt;p&gt;Besides blogging, I was also using it as a notetaking system. I loved that I could write a markdown file, and Jekyll could turn my notes into a nice looking web page. However, when I had a few dozen notes it would take several seconds to see edits appear in a browser. I wasn&#39;t very good with using HTML and CSS, so I became frustrated as I tried to use my notes repository to experiment with layout and design. The feedback loop was irritatingly slow.&lt;/p&gt;
&lt;p&gt;I spent months looking into other solutions. I read about &lt;a class=&#34;reference external&#34; href=&#34;http://takingnotenow.blogspot.com/2007/12/luhmanns-zettelkasten.html&#34;&gt;Luhmann&#39;s Zettelkasten&lt;/a&gt; for organizing my files, and &lt;a class=&#34;reference external&#34; href=&#34;http://www.sphinx-doc.org/en/stable/&#34;&gt;Sphinx&lt;/a&gt;, the tool used by the Python programming language for generating all of their documentation.&lt;/p&gt;
&lt;p&gt;Sphinx turned out to be a bit of a rabbit hole, a good one. The source documents for Sphinx are written in reStructuredText (rST). I was curious why that file format was chosen over Markdown or plain text. While rST has its issues and limitations, it is a much more rich markup language than Markdown. Also, Sphinx is a programmable environment. If it doesn&#39;t have a directive you need, there&#39;s a way to define new ones.&lt;/p&gt;
&lt;p&gt;The possibilities just wowed me. I ported all my old notes from Markdown to rST and dove into Sphinx, directives, and roles. I spent a lot of time learning, writing, and even played around with CSS a little bit. Even so, Sphinx presented a kind of impedance mismatch between what I was trying to do - just have a tool that builds nice web pages from my notes - and keeping a Python environment up-to-date as I wanted to try new features added to later releases of Sphinx.&lt;/p&gt;
&lt;p&gt;My success with Sphinx for notes left me with a desire to blog again. I was probably suffering from myopia, but at the time I didn&#39;t realize that Jekyll is not necessary to build GitHub pages, and I didn&#39;t know how or if Sphinx could be configured to work with GitHub pages.&lt;/p&gt;
&lt;p&gt;Well, I spent a lot of time in 2018 learning &lt;a class=&#34;reference external&#34; href=&#34;https://golang.org/&#34;&gt;Go&lt;/a&gt; for a new project at work. It&#39;s a very nice programming language. Late in 2018, I came across &lt;a class=&#34;reference external&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt;. It looked interesting, and what do you know, it&#39;s written in Go! I had to give it a try. I figured even if it&#39;s not to my liking, I can look at the source code, and learn something more about Go.&lt;/p&gt;
&lt;p&gt;It turns out that not only is Hugo useful, it is fast, not too hard to integrate MathJax for nice looking equations, has a powerful template language, and it is even possible to write pages in rST - though it requires integration with the Python script &lt;a class=&#34;reference external&#34; href=&#34;https://pypi.org/project/rst2html5/&#34;&gt;rst2html5&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;That&#39;s enough for now. I&#39;ll cover my adventures using &lt;a class=&#34;reference external&#34; href=&#34;https://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; in a future post.&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;</description>
    </item>
    
    <item>
      <title>A Dangerous Spectacle</title>
      <link>https://douglascuthbertson.com/2016/11/a-dangerous-spectacle/</link>
      <pubDate>Wed, 09 Nov 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/11/a-dangerous-spectacle/</guid>
      <description>&lt;p&gt;I am truly saddened by the outcome of the 2016 presidential election.&lt;/p&gt;
&lt;p&gt;I woke up this morning to find that Donald Trump is our president elect. I feel really awful about it.&lt;/p&gt;
&lt;p&gt;Our national anthem declares America as &amp;ldquo;the land of the free and the home of the brave.&amp;rdquo; While we don&amp;rsquo;t always live up to that ideal, it&amp;rsquo;s something we strive for. It&amp;rsquo;s something we are all proud of.&lt;/p&gt;
&lt;p&gt;We&amp;rsquo;ve elected as our next president a person who bullies people. He&amp;rsquo;s denigrated those with disabilities. He abuses women. He spreads fear and hate based on race and religion, and wraps it in spectacle.&lt;/p&gt;
&lt;p&gt;I hoped more people were unwilling to overlook the pain, suffering and fear he spreads and see him for what he is - a hateful, dangerous person who cares for nothing but himself. Instead, he will become our next leader. Good luck to us all.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Serving a Blog</title>
      <link>https://douglascuthbertson.com/2016/09/serving-a-blog/</link>
      <pubDate>Sun, 04 Sep 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/09/serving-a-blog/</guid>
      <description>&lt;p&gt;I want a blog where I control the design and layout. I want to be able to change the way it works and appears so I can experiment with various ideas, learn by attempting to replicate other designs and see what happens.&lt;/p&gt;
&lt;p&gt;I&amp;rsquo;ve tried CMS solutions running on Linux-based servers. One of the first ones I tried many years ago was &lt;a href=&#34;http://cocoon.apache.org/&#34;&gt;Apache Cocoon&lt;/a&gt;. I was enticed by how flexible and programmable it was with its pipeline architecture. It seemed anything was possible. Ultimately, trying to program using XML and XSLT, and configure Java servlets proved to be too complicated. The languages and processes needed to keep the site up and running were too far removed from those for adding content.&lt;/p&gt;
&lt;p&gt;The mechanics of site maintenance took too much time away from just plain writing. I didn&amp;rsquo;t realize that was the problem at the time, so I allowed myself to be lured into other complex solutions. I tried &lt;a href=&#34;https://plone.org/&#34;&gt;Plone&lt;/a&gt; for a short while, but got tired of configuration bugs (the bugs were probably mine, and I was too impatient to figure out how to make Plone work correctly). I had a short run with &lt;a href=&#34;http://www.web2py.com/&#34;&gt;web2py&lt;/a&gt; and a long one with &lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt; 5 and 6. Drupal was fun and I did get it to work fairly well. The only real problem was keeping up with patches for the core system as well as all of the plug-ins. They made it relatively easy to do, but it was another time consuming annoyance.&lt;/p&gt;
&lt;p&gt;I ran each of these CMS solutions from a Windows box at home and a dynamic DNS provider. Besides being cheap and rickety, there were always quirks running on Windows as most of these systems were designed and tested on Linux. Windows support varied from very well to an after thought.&lt;/p&gt;
&lt;h2 id=&#34;simplicity&#34;&gt;Simplicity&lt;/h2&gt;
&lt;p&gt;I&amp;rsquo;ve come around to thinking that if I&amp;rsquo;m going to have a corner of the web to express my thoughts, the tooling and maintenance of it should be as simple and low-overhead as possible. Static sites are very appealing in this respect. Post a little content wrapped in some HTML, give it some style with CSS and it&amp;rsquo;s done.&lt;/p&gt;
&lt;p&gt;Still, nothing is ever quite simple when it comes to digital information. I&amp;rsquo;m always concerned about having copies of data to prevent loss. I&amp;rsquo;d like be able to look back and see how I got to where I am today - especially when it comes to reverting changes that, upon reflection, weren&amp;rsquo;t so good. I also don&amp;rsquo;t have a lot of spare cash to spend, so most cloud servers are out of the questions.&lt;/p&gt;
&lt;p&gt;I did use a small &lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt; droplet for a while - only $5.00 USD/month. It addressed the cash issue very well, and I used &lt;a href=&#34;http://fossil-scm.org/index.html/doc/trunk/www/index.wiki&#34;&gt;Fossil SCM&lt;/a&gt; for version control. I also have a server running &lt;a href=&#34;http://www.freenas.org/&#34;&gt;FreeNAS&lt;/a&gt; where I backup all my data.&lt;/p&gt;
&lt;p&gt;To build anything on a computer, you need good tools. For static site generation, I settled on &lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt;, a static site generator that turns &lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown&lt;/a&gt;, HTML and CSS (and even &lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass&lt;/a&gt; into a website. I made changes locally, and ran Jekyll to see the results. When I was satisfied, I&amp;rsquo;d check-in  the changes to Fossil and copy, via SSH, the &lt;code&gt;_site&lt;/code&gt; folder to my droplet where &lt;a href=&#34;https://www.nginx.com/&#34;&gt;nginx&lt;/a&gt; would serve the content. I thought it was as simple as it could get.&lt;/p&gt;
&lt;p&gt;It does get more simple. &lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt; is an amazing site that lets anyone make a &lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt; repository. If you don&amp;rsquo;t mind it being publicly available, then their service is &lt;em&gt;free&lt;/em&gt;! They also make it easy, with Jekyll, to create a personal website. I no longer have to be (directly) concerned with web server configuration and security. That&amp;rsquo;s offloaded to the experts at GitHub. Also, uploading changes to my site is easier. All I have to do to update my blog is to commit the changes to my local repository and execute &lt;code&gt;git push origin&lt;/code&gt;.&lt;/p&gt;
&lt;h2 id=&#34;the-remaining-complexity&#34;&gt;The Remaining Complexity&lt;/h2&gt;
&lt;p&gt;At this stage, I can&amp;rsquo;t imagine how it could be easier (and certainly it can&amp;rsquo;t be cheaper). The only complexity left is figuring out how to make my blog appear pleasing to the eye. That&amp;rsquo;s a matter of laying out some HTML, writing content marked up with &lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;Github Flavored Markdown&lt;/a&gt; and using CSS and &lt;a href=&#34;http://thesassway.com/editorial/sass-vs-scss-which-syntax-is-better&#34;&gt;SCSS&lt;/a&gt; to give it some style.&lt;/p&gt;
&lt;p&gt;I originally had a complex mess inherited from previous attempts at making a personal site with varying goals. I&amp;rsquo;ve now pared it down to something much easier to manage. I&amp;rsquo;ll post again about my current, more modest goals, what inspired the current design and how I&amp;rsquo;m going about the process of reaching them.&lt;/p&gt;
&lt;h2 id=&#34;references&#34;&gt;References&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;http://cocoon.apache.org/&#34;&gt;Apache Cocoon&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://plone.org/&#34;&gt;Plone&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.web2py.com/&#34;&gt;web2py&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.drupal.org/&#34;&gt;Drupal&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.digitalocean.com/&#34;&gt;Digital Ocean&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://fossil-scm.org/index.html/doc/trunk/www/index.wiki&#34;&gt;Fossil Source Control Management&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://www.freenas.org/&#34;&gt;FreeNAS&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://jekyllrb.com/&#34;&gt;Jekyll Static Site Generator&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://daringfireball.net/projects/markdown/&#34;&gt;Markdown Markup Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://sass-lang.com/&#34;&gt;Sass Stylesheet Language&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.nginx.com/&#34;&gt;nginx web server&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/&#34;&gt;GitHub&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://git-scm.com/&#34;&gt;git&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://guides.github.com/features/mastering-markdown/&#34;&gt;GitHub Flavored Markdown&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://thesassway.com/editorial/sass-vs-scss-which-syntax-is-better&#34;&gt;SCSS&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;</description>
    </item>
    
    <item>
      <title>Fixing the Width</title>
      <link>https://douglascuthbertson.com/2016/03/fixing-the-width/</link>
      <pubDate>Thu, 10 Mar 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/03/fixing-the-width/</guid>
      <description>&lt;p&gt;What an ugly, fragile blog.&lt;/p&gt;
&lt;p&gt;All I wanted to do was make the page a little wider. Suddenly the widths of the left and right columns were varying in size depending on content. Headings were crazy sizes. Both headings and paragraphs had awkward line spacing. While syntax highlighting is a great feature, poor color choices make code very hard to read. It was a mess.&lt;/p&gt;
&lt;p&gt;I spent a lot of time trying to figure out what was going wrong. One of the problems was using &lt;code&gt;flex-grow: 1;&lt;/code&gt; for the left column and &lt;code&gt;width: auto;&lt;/code&gt; on the right. These settings left too many decisions up to the browser. I now calculate the column widths and margins based on the width of the whole body. The code also floats the two columns to the left and right, respectively. It may not be the best solution, but it will do until I learn how to responsive grid systems work.&lt;/p&gt;
&lt;p&gt;I also got rid of jQuery and some other JavaScript. It was a holdover from another website I created a while ago. The only JavaScript remaining is for MathJax, which I plan to use for - what else? - math!&lt;/p&gt;
&lt;p&gt;\[
\begin{bmatrix}
a &amp;amp; b &amp;amp; c &amp;amp; d \\&lt;br&gt;
e &amp;amp; f &amp;amp; g &amp;amp; h \\&lt;br&gt;
i &amp;amp; j &amp;amp; k &amp;amp; l \\&lt;br&gt;
m &amp;amp; n &amp;amp; o &amp;amp; p
\end{bmatrix}
\times
\begin{bmatrix}
x \\&lt;br&gt;
y \\&lt;br&gt;
z \\&lt;br&gt;
w
\end{bmatrix}
=
\begin{bmatrix}
ax + by + cz +dw  \\&lt;br&gt;
ex + fy + gz + hw \\&lt;br&gt;
ix + jy + kz +lw  \\&lt;br&gt;
mx + ny + oz + pw
\end{bmatrix}
\]&lt;/p&gt;
&lt;p&gt;This blog is still quite ugly, but I&amp;rsquo;m feeling better about it after putting in a couple of days work to make the width behave the way I want it to. Now to learn more about layout design, typography, Sass, CSS and how best to put to use semantic HTML5 tags, like  &lt;code&gt;&amp;lt;main&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;aside&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;header&amp;gt;&lt;/code&gt; and others.&lt;/p&gt;
&lt;p&gt;&lt;em&gt;2019.07.29 Edit: typos&lt;/em&gt;
&lt;em&gt;2019.08.07 Edit: tags&lt;/em&gt;&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Pursuit of Happiness Gels in the Imagination</title>
      <link>https://douglascuthbertson.com/2016/03/the-pursuit-of-happiness-gels-in-the-imagination/</link>
      <pubDate>Wed, 09 Mar 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/03/the-pursuit-of-happiness-gels-in-the-imagination/</guid>
      <description>&lt;p&gt;Imagination is good, but action needs to be taken in the real world.&lt;/p&gt;
&lt;p&gt;I wonder if the reason I have so many non-fiction books waiting to be read is that I&amp;rsquo;m looking for the thrill of living in a world of fun and self-fulfillment, but I&amp;rsquo;m not willing to create it. I have books on game programming, drawing, sketching, animation, project managment, time management, organizing, clutter reduction, investing and other topics. Even among those I have read, they don&amp;rsquo;t do me much good unless I act upon them.&lt;/p&gt;
&lt;p&gt;The Wondermark comic No. 1204, &lt;a href=&#34;http://wondermark.com/c1204/&#34;&gt;The Cargo Cult of Adulthood&lt;/a&gt;, started me thinking about imagination versus creating and doing real things. It contrasts buying stuff with buying experiences. The chain of thought starts with buying a movie ticket to get a few hours of being in a dramatized world. Similarly, buying a lottery ticket buys a few days of dreaming there&amp;rsquo;s a chance of becoming a millionaire. The thought continues with the notion that buying stuff can transport us into a fun, but imaginary world. Things like workout clothes, cookbooks, and self-help stuff, says David Malki, the author of Wondermark, are the tickets of admission to the fun imaginary worlds of being fit, eating well and having a good life.&lt;/p&gt;
&lt;p&gt;He goes on to shortcut the whole process by proposing we skip shopping and just pay someone to give us a daily pep talks about how fun our lives really are, but that&amp;rsquo;s beside the point. These things we buy are just fodder for the imagination unless some action is taken in the real world. Create something new, or clean up something old to make it useful and accessible and then actually put it to use. Put on the workout clothes and exercise. Follow the lessons in that book about sketching, put pencil to paper and practice.&lt;/p&gt;
&lt;p&gt;First efforts will probably stink. Exercising is difficult in the beginning. The first sketch will be awful. It&amp;rsquo;s all about sticking with it. Improvement will happen.&lt;/p&gt;
&lt;p&gt;Maybe this post is just me giving myself a pep talk (it&amp;rsquo;s ceratinly cheaper than paying someone else to do it), but I have things to do, and I feel more like getting them done.&lt;/p&gt;
&lt;p&gt;I created this blog to become a better writer, quell demons of doubt and to workout ideas. I titled it &amp;ldquo;Dream, Sketch, Code&amp;rdquo;, because I have a lot of half-baked ideas, think about and create software, and I want to get better at sketching and drawing. Besides being a relaxing activity, I&amp;rsquo;d like to draw well enough that I can use sketches to better describe my ideas.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Quick Note on Python</title>
      <link>https://douglascuthbertson.com/2016/01/a-quick-note-on-python/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/01/a-quick-note-on-python/</guid>
      <description>&lt;p&gt;I saw an amusing Python tutorial.&lt;/p&gt;
&lt;p&gt;I have been meaning to learn Python for a while now. While searching for other things, I came across an amusingly titled video on YouTube, &lt;a href=&#34;https://www.youtube.com/watch?v=N4mEzFDjqtA&amp;amp;list=PLGLfVvz_LVvSX7fVd4OUFp_ODd86H0ZIY&amp;amp;index=2&#34;&gt;Python Programming: Learn Python in One Video&lt;/a&gt;, by &lt;a href=&#34;https://www.youtube.com/user/derekbanas&#34;&gt;Derek Banas&lt;/a&gt;.&lt;/p&gt;
&lt;p&gt;I had no illusions it was going to cover the language in any depth. Still, it is only about 45 minutes long, so I decided to take a look. It actually hit a lot of highlights and was a nice overview of the language.&lt;/p&gt;
&lt;p&gt;For example, it introduces the built-in operators and data types. It goes over the &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loops. It also covers several other programming concepts. If you&amp;rsquo;ve never seen Python before, this video is worth a look.&lt;/p&gt;
&lt;p&gt;I recently picked up a copy of Steven Skiena&amp;rsquo;s &amp;ldquo;Programming Challenges&amp;rdquo; and started going through the problems. To see if I learned anything from the video, I tried coding the first puzzle, the &lt;a href=&#34;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=3&amp;amp;page=show_problem&amp;amp;problem=36&#34;&gt;&lt;code&gt;3n+1&lt;/code&gt; problem&lt;/a&gt;. The link is to the puzzle on the &lt;a href=&#34;https://uva.onlinejudge.org/&#34;&gt;UVa Online Judge&lt;/a&gt;, where one can submit code in C, C++, Java or Pascal. Sadly, they don&amp;rsquo;t support Python. Nevertheless, here&amp;rsquo;s my version in Python:&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre class=&#34;chroma&#34;&gt;&lt;code class=&#34;language-python&#34; data-lang=&#34;python&#34;&gt;&lt;span class=&#34;kn&#34;&gt;import&lt;/span&gt; &lt;span class=&#34;nn&#34;&gt;sys&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Execute: &amp;#34;python p100.py &amp;lt; data&amp;#34; where &amp;#39;data&amp;#39; is the input file, two integers per line.&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;cycle_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;while&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;!=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# n is odd, so multiply by 3 and add 1&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;3&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;*&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;else&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
            &lt;span class=&#34;c1&#34;&gt;# n is even, so divide by 2&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;/=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;2&lt;/span&gt;

        &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;+=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;

    &lt;span class=&#34;k&#34;&gt;return&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;result&lt;/span&gt;

&lt;span class=&#34;c1&#34;&gt;# Each line of input consists of two integers&lt;/span&gt;
&lt;span class=&#34;k&#34;&gt;def&lt;/span&gt; &lt;span class=&#34;nf&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;():&lt;/span&gt;
    &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;sys&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;stdin&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;line&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;.&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;split&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;map&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;nb&#34;&gt;int&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;,&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# reset the max cycle length for each line of input&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;max_cycle_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;

        &lt;span class=&#34;c1&#34;&gt;# Make a copy of the original list for output&lt;/span&gt;
        &lt;span class=&#34;n&#34;&gt;original_list&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
        &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]:&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;x&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;for&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;n&lt;/span&gt; &lt;span class=&#34;ow&#34;&gt;in&lt;/span&gt; &lt;span class=&#34;nb&#34;&gt;range&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;input_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;]&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;+&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;):&lt;/span&gt;
            &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;cycle_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;n&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;)&lt;/span&gt;
            &lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_cycle_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
                &lt;span class=&#34;n&#34;&gt;max_cycle_length&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;=&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;length&lt;/span&gt;

        &lt;span class=&#34;k&#34;&gt;print&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt; &lt;/span&gt;&lt;span class=&#34;si&#34;&gt;%d&lt;/span&gt;&lt;span class=&#34;s2&#34;&gt;&amp;#34;&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;%&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;(&lt;/span&gt;&lt;span class=&#34;n&#34;&gt;original_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;0&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;original_list&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;[&lt;/span&gt;&lt;span class=&#34;mi&#34;&gt;1&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;],&lt;/span&gt; &lt;span class=&#34;n&#34;&gt;max_cycle_length&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;))&lt;/span&gt;

&lt;span class=&#34;k&#34;&gt;if&lt;/span&gt; &lt;span class=&#34;vm&#34;&gt;__name__&lt;/span&gt; &lt;span class=&#34;o&#34;&gt;==&lt;/span&gt; &lt;span class=&#34;s2&#34;&gt;&amp;#34;__main__&amp;#34;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;:&lt;/span&gt;
    &lt;span class=&#34;n&#34;&gt;main&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;I think the only thing here that wasn&amp;rsquo;t covered in the video is reading from stdin.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>A Blog on GitHub</title>
      <link>https://douglascuthbertson.com/2015/12/a-blog-on-github/</link>
      <pubDate>Wed, 30 Dec 2015 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2015/12/a-blog-on-github/</guid>
      <description>&lt;p&gt;What do you really need to know to setup a blog on GitHub?&lt;/p&gt;
&lt;p&gt;I want a platform to write about software development, design patterns, and anything else that came to mind. &lt;a href=&#34;https://help.github.com/articles/user-organization-and-project-pages/&#34;&gt;GitHub user pages&lt;/a&gt; looked like a good place to start. I&amp;rsquo;ve toyed with &lt;a href=&#34;https://jekyllrb.com/&#34;&gt;Jekyll&lt;/a&gt; and &lt;a href=&#34;http://compass-style.org/&#34;&gt;Compass&lt;/a&gt; in the past, so I thought it would be easy to setup. For the most part, it is. Along the way, I discovered a few stumbling blocks that I will share.&lt;/p&gt;
&lt;h2 id=&#34;initial-setup&#34;&gt;Initial Setup&lt;/h2&gt;
&lt;p&gt;The initial steps (create a GitHub repository, install and configure Jekyll) were easy. The first stumbling block I ran into was ensuring the versions of my Ruby gems and my Jekyll configuration were consistent with what GitHub supported. GitHub doesn&amp;rsquo;t yet support Jekyll v3, which is what I have installed on my desktop.&lt;/p&gt;
&lt;p&gt;Fortunately they provide excellent &lt;a href=&#34;https://help.github.com/articles/using-jekyll-with-pages/&#34;&gt;documentation&lt;/a&gt;. The most important part is to add &lt;code&gt;gem &#39;github-pages&#39;&lt;/code&gt; to your &lt;code&gt;Gemfile&lt;/code&gt;. By running &lt;code&gt;bundle install&lt;/code&gt;, you get Jekyll and all the dependencies in the correct version to be compatible with Jekyll on GitHub.&lt;/p&gt;
&lt;p&gt;I also installed &lt;a href=&#34;http://compass-style.org/&#34;&gt;Compass&lt;/a&gt;. It&amp;rsquo;s a nice tool that watches the files in the repository for changes, and recompiles the .scss files as needed. GitHub doesn&amp;rsquo;t use Compass, so you have to commit the CSS files it generates to the repository.&lt;/p&gt;
&lt;h2 id=&#34;creating-a-blog&#34;&gt;Creating a Blog&lt;/h2&gt;
&lt;p&gt;Reading and following the documentation for GitHub pages, Jekyll and Compass will establish all of the scaffolding you need to start a blog. It will not provide any scaffolding for the structure and contents of the blog itself.&lt;/p&gt;
&lt;p&gt;I thought I&amp;rsquo;d be able to make a cool blog with responsive CSS so it would be readable on a variety of screen sizes. I learned quickly to keep things simple. I just don&amp;rsquo;t know enough CSS right now to make that happen. I stumbled upon (Googled for &amp;ldquo;html5 sidebar layout&amp;rdquo;) &lt;a href=&#34;http://multimedia.journalism.berkeley.edu/tutorials/css-layout/&#34;&gt;one good tutorial&lt;/a&gt; that enabled me to create the basic structure for this blog. Warning: I had to insert &lt;code&gt;p script { display: block;}&lt;/code&gt; to display the code blocks. Each code block is wrapped in a &lt;code&gt;&amp;lt;script&amp;gt;&lt;/code&gt; element and is written in an XML &lt;code&gt;&amp;lt;![CDATA[...]]&amp;gt;&lt;/code&gt; block. The user agent stylesheet sets &lt;code&gt;script {display: none; }&lt;/code&gt;, so I couldn&amp;rsquo;t see the code.&lt;/p&gt;
&lt;p&gt;I made a few adjustments to the styling and HTML to suit my taste. One thing I was delighted to learn was how to make the content area and the sidebar the same height. The tutorial presented a solution in JavaScript, but that didn&amp;rsquo;t work for posts. The disqus comment block wasn&amp;rsquo;t included in the calculation.&lt;/p&gt;
&lt;p&gt;The main content area and the sidebar are both included in &lt;code&gt;div&lt;/code&gt; section with the ID &lt;code&gt;boxes&lt;/code&gt; (&lt;code&gt;&amp;lt;div id=&amp;quot;boxes&amp;quot;&amp;gt;&lt;/code&gt;). All I had to do was style the &lt;code&gt;div&lt;/code&gt; with &lt;code&gt;display: flex;&lt;/code&gt;. Here&amp;rsquo;s the code and comment from my stylesheet.&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;/* Using display: flex; to make the sidebar column the same length as the main content.
   See: http://tutorialzine.com/2014/10/easiest-way-equal-height-sidebar/ for details.
   */
#boxes {
    display: flex;
}
&lt;/code&gt;&lt;/pre&gt;&lt;h2 id=&#34;more-to-do&#34;&gt;More To Do&lt;/h2&gt;
&lt;p&gt;There&amp;rsquo;s a lot of work that goes into making a web page look presentable. At the very least, text should be readable, sections should be well aligned, and the color theme should be pleasing to the eye. There is a lot to fiddle with, but I think I&amp;rsquo;ve done an okay job for now. I glad I have a place to write down ideas, write about projects I want to pursue and share some thoughts in general.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
