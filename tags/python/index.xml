<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>python on Doug&#39;s Blog</title>
    <link>https://douglascuthbertson.com/tags/python/</link>
    <description>Recent content in python on Doug&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <managingEditor>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</managingEditor>
    <webMaster>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</webMaster>
    <lastBuildDate>Mon, 04 Jan 2016 00:00:00 +0000</lastBuildDate>
    
        <atom:link href="https://douglascuthbertson.com/tags/python/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>A Quick Note on Python</title>
      <link>https://douglascuthbertson.com/2016/01/a-quick-note-on-python/</link>
      <pubDate>Mon, 04 Jan 2016 00:00:00 +0000</pubDate>
      <author>doug.cuthbertson@gmail.com (Douglas Cuthbertson)</author>
      <guid>https://douglascuthbertson.com/2016/01/a-quick-note-on-python/</guid>
      <description>&lt;p&gt;I saw an amusing Python tutorial.&lt;/p&gt;

&lt;p&gt;I have been meaning to learn Python for a while now. While searching for other things, I came across an amusingly titled video on YouTube, &lt;a href=&#34;https://www.youtube.com/watch?v=N4mEzFDjqtA&amp;amp;list=PLGLfVvz_LVvSX7fVd4OUFp_ODd86H0ZIY&amp;amp;index=2&#34;&gt;Python Programming: Learn Python in One Video&lt;/a&gt;, by &lt;a href=&#34;https://www.youtube.com/user/derekbanas&#34;&gt;Derek Banas&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I had no illusions it was going to cover the language in any depth. Still, it is only about 45 minutes long, so I decided to take a look. It actually hit a lot of highlights and was a nice overview of the language.&lt;/p&gt;

&lt;p&gt;For example, it introduces the built-in operators and data types. It goes over the &lt;code&gt;for&lt;/code&gt; and &lt;code&gt;while&lt;/code&gt; loops. It also covers several other programming concepts. If you&amp;rsquo;ve never seen Python before, this video is worth a look.&lt;/p&gt;

&lt;p&gt;I recently picked up a copy of Steven Skiena&amp;rsquo;s &amp;ldquo;Programming Challenges&amp;rdquo; and started going through the problems. To see if I learned anything from the video, I tried coding the first puzzle, the &lt;a href=&#34;https://uva.onlinejudge.org/index.php?option=com_onlinejudge&amp;amp;Itemid=8&amp;amp;category=3&amp;amp;page=show_problem&amp;amp;problem=36&#34;&gt;&lt;code&gt;3n+1&lt;/code&gt; problem&lt;/a&gt;. The link is to the puzzle on the &lt;a href=&#34;https://uva.onlinejudge.org/&#34;&gt;UVa Online Judge&lt;/a&gt;, where one can submit code in C, C++, Java or Pascal. Sadly, they don&amp;rsquo;t support Python. Nevertheless, here&amp;rsquo;s my version in Python:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-python&#34;&gt;import sys

# Execute: &amp;quot;python p100.py &amp;lt; data&amp;quot; where &#39;data&#39; is the input file, two integers per line.
def cycle_length(n):
    result = 1

    while (n != 1):
        if (n % 2):
            # n is odd, so multiply by 3 and add 1
            n = 3 * n + 1
        else:
            # n is even, so divide by 2
            n /= 2

        result += 1

    return result

# Each line of input consists of two integers
def main():
    for line in sys.stdin:
        input_list = line.split()
        input_list = list(map(int, input_list))

        # reset the max cycle length for each line of input
        max_cycle_length = 0

        # Make a copy of the original list for output
        original_list = list(input_list)
        if input_list[0] &amp;gt; input_list[1]:
            x = input_list[0]
            input_list[0] = input_list[1]
            input_list[1] = x

        for n in range(input_list[0], input_list[1]+1):
            length = cycle_length(n)
            if length &amp;gt; max_cycle_length:
                max_cycle_length = length

        print(&amp;quot;%d %d %d&amp;quot; % (original_list[0], original_list[1], max_cycle_length))

if __name__ == &amp;quot;__main__&amp;quot;:
    main()
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;I think the only thing here that wasn&amp;rsquo;t covered in the video is reading from stdin.&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>
